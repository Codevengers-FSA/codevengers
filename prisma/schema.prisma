// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int         @id @default(autoincrement())
  username           String      @unique
  password           String
  watchlists         Watchlist[]
  comments           Comment[]   
}

model Watchlist {
  id                 Int         @id @default(autoincrement())
  title              String
  movie              Movie       @relation(fields: [movieId], references: [id])
  movieId            Int
  owner              User        @relation(fields: [ownerId], references: [id])
  ownerId            Int
}

model Movie {
  id                 Int         @id @default(autoincrement())
  title              String      @unique
  summary            String
  ratings            String
  image              String
  watchlists         Watchlist[]
  comments           Comment[]
  releaseDate        DateTime
  chronologicalOrder Int
}

model Comment {
  id                 Int       @id @default(autoincrement())
  movieId            Int
  movie              Movie     @relation(fields: [movieId], references: [id], onDelete: Cascade)
  userId             Int?     
  user               User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
  text               String
  parentId           Int?     
  parent             Comment?  @relation("CommentReplies", fields: [parentId], references: [id], onDelete: Cascade)
  replies            Comment[] @relation("CommentReplies")
  createdAt          DateTime  @default(now())
}